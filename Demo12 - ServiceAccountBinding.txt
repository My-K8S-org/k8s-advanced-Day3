
minikube start --extra-config=apiserver.Authorization.Mode=RBAC
Step 1:

Open GIT BASH
kubectl cluster-info dump | grep rbac
kubectl get sa --all-namespaces | grep default
kubectl get sa -n default
<note the sa name>
kubectl describe sa <name> -n default

Step 2:
kubectl get secret default-token-dffkj -o yaml
#ca.crt
#token .. JWT (JSON web Token), RFC 7519

Step 3:
notepad podsa.txt
=================
apiVersion: v1
kind: Pod
metadata:
 name: pod-default
spec:
 containers:
 - name: alpine
   image: alpine:3.9
   command:
   - "sleep"
   - "10000"

kubectl create -f podsa.txt

Step 4:
kubectl describe pod pod-default
? No SA

kubectl get pod pod-default -o yaml
? Service account ?
? Note down the mount path -  mountPath: /var/run/secrets/kubernetes.io/serviceaccount

Step 5:

kubectl exec -it pod-default -- sh
# apk add --update curl
Fetches...
# curl https://kubernetes/api/v1 --insecure
? Forbidden (403)

Step 6:
Continuing in shell.
# TOKEN=$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
#curl -H “Authorization: Bearer $TOKEN” https://kubernetes/api/v1/namespaces
/default/pods/ --insecure  
?

Step 7:
kubectl create sa newdemo-sa

notepad podservice.txt
----------------------
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
 name: api-list-pods
 namespace: default
rules:
 - apiGroups:
   - ''
   resources:
   - pods
   verbs:
   - list

kubectl create -f podservice.txt

kubectl describe role api-list-pods

Step 8:
# creating rolebinding.

notepad rolebind.txt

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
 name: new-list-pods_demo-sa
 namespace: default
roleRef:
 kind: Role
 name: api-list-pods
 apiGroup: rbac.authorization.k8s.io
subjects:
 - kind: ServiceAccount
   name: newdemo-sa
   namespace: default

kubectl create -f rolebind.txt

kubectl describe rolebinding new-list-pods_demo-sa

# Note down the namespace filled in for you ?

Step 9:

# now , lets bind the pod with SA.
apiVersion: v1
kind: Pod
metadata:
 name: podwithsa
spec:
 serviceAccountName: newdemo-sa
 containers:
 - name: alpine
   image: alpine:3.9
   command:
   - "sleep"
   - "10000"

kubectl create -f poddemo.txt

Step 10:
kubectl describe pod podwithsa 
# Note down service accounts
kubectl get pod podwithsa -o yaml
# note down pod serviceaccount path in volume as secret

Step 11:
kubectl exec -it podwithsa -- sh
# curl apk add --update curl
# TOKEN=$(cat /run/secrets/kubernetes.io/serviceaccount/token)
# curl -H "Authorization: Bearer $TOKEN" https://kubernetes/api/v1 --insecure
# curl -H "Authorization: Bearer $TOKEN" https://kubernetes/api/v1/namespaces
/default/pods/ --insecure



